# https://docs.github.com/en/actions/guides/building-and-testing-python#publishing-to-package-registries

name: build & pypi upload

on:
  release:
    types: [ published ]
  workflow_dispatch: # manual execution

jobs:
  pypi-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python_version: [3.7 3.8 3.9]
        include:
          - os: ubuntu-latest
            container: quay.io/pypa/manylinux_2_24_x86_64  # https://github.com/pypa/manylinux
#          - os: macos-latest
#          - os: windows-latest
#            python_version: 3.8

    container: ${{ matrix.container }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up python (script version)
      if: matrix.container == ''
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}

    - name: Set up python (3.7 container)
      if: matrix.container != '' && matrix.python_version == '3.7'
      run: |
        echo "/opt/python/cp37-cp37m/bin" >> $GITHUB_PATH

    - name: Set up python (3.8 container)
      if: matrix.container != '' && matrix.python_version == '3.8'
      run: |
        echo "/opt/python/cp38-cp38m/bin" >> $GITHUB_PATH

    - name: Set up python (3.9 container)
      if: matrix.container != '' && matrix.python_version == '3.9'
      run: |
        echo "/opt/python/cp39-cp39m/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Work around arm64 support on MacOS
      # https://github.com/actions/virtual-environments/issues/2557
      if: matrix.os == 'macos-latest'
      run: sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*

    - name: Build source dist
      if: matrix.os == 'ubuntu-latest' # we only need sdist once
      env:
        TWINE_REPOSITORY: ${{ secrets.PYPI_REPOSITORY }} # used by setup.py
      run: make sdist

    - name: Build binary dist
      env:
        TWINE_REPOSITORY: ${{ secrets.PYPI_REPOSITORY }} # used by setup.py
      run: make bdist

    - name: Upload
      env:
        TWINE_REPOSITORY: ${{ secrets.PYPI_REPOSITORY }}
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*
