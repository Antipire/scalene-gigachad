import time
import numpy as np
import pandas as pd

# this assumes you have memory_profiler installed
# if you want to use "@profile" on a function
# if not, we can ignore it with a pass-through decorator
if 'profile' not in dir():
    def profile(fn):
        return fn 

SIZE = 10_000_000

state = ('MT19937', np.array([2147483648,  836245995,  655469631, 1518419300, 2089355717,
         99281689, 1562081605, 1205807034,  666483813,  827111871,
       1280591578, 3329716818, 3431199855,  501108333, 2049774483,
       2263660105,   34946921, 3485906549, 3228985752,  804258837,
       2816036053, 1644221043, 2073157775, 2769343861, 2876546792,
       2864619725,  225680445, 2823488622, 2193986665, 3103441609,
       1521750730, 3365065783, 3529469283, 1540275709, 1905710392,
       4083255940, 3658217671, 2925299887, 3036173606, 1638557647,
       3848395325, 3622187285, 1179722335, 2036265851, 1048861416,
        343859149,  793696368,  823587763,  585667092, 2965161743,
       3645277736,  163696164,  557898188,  172401205, 2297607276,
       2032493888, 2503163439,  125447945, 2108517219, 3263474337,
       3746687869, 2691762242, 1785680785, 2684434596,   55841256,
       3996319744, 3495636597, 2465662738, 3839810194, 2208913242,
       4090155156, 3025917502, 3776771520, 4274303031, 3022174636,
       2438465405, 2203804343, 3724338255, 4107238513, 1791743086,
       1960698529, 2843055814, 2553004229, 3407300338,  956747018,
       3442629441, 2829480632, 2150596170,   98495298, 1895833971,
        107570727, 1688616579, 3151709303, 3741466417, 4235892484,
       1463798170, 1274680262, 1849440783, 3643755137, 3658875379,
       2866725138,  245531217, 3741481948, 4170870015, 4110863706,
       3410585530, 3166391221, 1713102398, 2140926711, 1409049167,
       2403652986, 1482202365,  840285161, 3906538858, 2923248723,
       3667260272, 3054385026, 3562068515,  726585552, 3508075389,
         13952200, 4200436782, 2710730844,  444300382, 4120275130,
       4048944998, 2738535364, 2454423790, 3008731369, 2213928902,
       3179733160, 2520277469, 1832020606, 1155431981, 1489452697,
       3121969776, 2202472091,  474417332, 4041960549, 1184334514,
       1837098899, 2083316639, 1732721913,  309023438, 1792050604,
       3664803779, 1384405354, 1308718564, 2842448992, 2729762503,
       2981883045,   55182127,  257206472, 2977834765, 3731914046,
       1026982163, 1131391939,  403758627, 1799541052, 3912582544,
       3869317021,   48699604, 1674450272,  352951532,  158252450,
       3294705298,  123479170, 3018466703, 2156311002, 1621430870,
        618996459, 3799709791, 3730532407, 3777885854, 3469944813,
         74438346, 2144148785, 2457942322, 2321304370, 1988141413,
       2220068575,  666686415,  765575999, 2532063881, 1215386989,
       2525373173, 2110084363, 4058954187,  483728121, 3258891789,
       2778074728, 1541448517, 1298991569,  530398638, 2180665812,
        208173453, 1353482464, 3107189184, 2482816674, 3769672405,
       2597100560, 2013438705, 1870721038, 2872577309, 2026785570,
       2273880635,  220690329, 1627664289, 2568081773, 1732973816,
       1780138228,  347638109, 1514167372, 3875859831,   91851111,
        382552232,  711281401, 3937154783, 3641224006,  766691223,
       2105322704, 3352105982, 3385857198, 3549691190, 1872946590,
       3337397983, 3763176931,  307165611, 2511956085, 2589366949,
       1068951912, 1995657878, 1076980333, 3134773803, 3908854258,
       2074272647, 1776727690,  737250882, 1972582829,  194207542,
       1282570126, 3063170855,  172879395,  579083105,  576106970,
       2056689893, 3406390935, 3949383939, 1101404090, 3353273773,
       3176810132, 2116814857,  478180268,  958421779, 3038724065,
       1026181007,  642022392,  915955371, 1562599949, 3599303020,
       1113905960, 3069253634,  163680671, 3522986393,   83852067,
       1334413178, 1013715682, 3076481914, 3158794411, 3162025931,
        646478646, 1921229350, 2515154070,  585538389, 3543371485,
       2297086735, 1753245580, 1149187084,  129501350, 3242696994,
       2137089789, 1370692544, 1847188311, 2909364556, 3045330728,
       2586353691, 4091465632, 3782335956, 3947677808, 2960889416,
       3595476704, 3429094790, 1090521036, 4282063304, 1359152349,
       2027019956,  297218795, 2917698331, 1003004870,  518055109,
        874331249,  532059141, 1048827325, 2529358951, 3859870444,
       1537797147, 1357202315, 3600703867, 2882647901, 2471975716,
        731355913,  973866601, 2807572548, 1683688488, 1596286443,
       1128831853, 3956814836, 3885313958, 1440237606, 3252275580,
       3852636958, 1586262207,  146647699, 2202404515, 2740568341,
       3093834907, 2929605056, 1688647363,   59374421, 1983510730,
       3276309190, 1282046543, 3289137632,  297986161, 2894053569,
        697730867, 3956150706,   64453732,  561786258,   33664996,
       3841588469, 2966021818, 3454567414, 2058786003, 3824628075,
       1519241982, 3771098248, 3230010019,  118990011,  519225025,
       2567296635, 1510925483,  453158718,  622580008, 2393618693,
        565729885, 4158879791, 2882398014, 1509708066,   71532582,
        881338580, 2122486385,  795358310, 2356061259, 2121027328,
       4156753520, 4102933171, 2432005200, 1474869780,  995868392,
        518072463,  867314263, 1234889750,  192324869, 3017272393,
       2943182088, 3740735211, 2926968837, 2655097743, 2700420816,
       2818107092, 1383169090, 4288807772, 3236055623, 1531958515,
        517530347, 3336624078, 2757182386, 1187474827, 3340189156,
        510186550,  584762047, 1424041277,  682392671, 1708041536,
       2912897466, 1854685280, 2064327864, 3702166292, 2863045123,
       1181619474, 2794875685, 3943253223,  974873086, 2019252567,
       2447617424, 4125701367, 2032077178,  555461255, 2552450640,
       2700179391,  725026578, 2768447919, 1262734704, 3905963694,
        528122847,  786856922,  494085952, 1450671321, 3493669336,
       3422360369,  112178268,  343511975, 2662504663, 2831334814,
       2624990853, 2102286144, 2963520134, 2585313396, 4030670732,
       3814800991,   84735913, 2152482480,  175325632,  700140757,
        213338962, 3482181889, 3504456850, 1724580949, 2903695735,
       2119204684, 3820427204, 3890658088, 2533457700, 2226531994,
       3936212654, 2297304848, 1418382383, 3850587455, 3338142923,
       3903102090, 3942416153, 1101903329, 3905085489, 2551599432,
       1016422128, 2181392601, 1596474843, 1655746878, 2100968223,
       1455849770, 1511462820, 1269703952, 1130331642, 3683022842,
       1346454514, 3771448869,  441198505, 3540711686, 3918144505,
       1422087389,  600333741, 3578171866, 1273649049, 4241320579,
       4159253964,  672030114, 4256721291,  105105213, 3430470365,
       1737656750, 3403467503, 3817531940, 3292766118,  923211467,
       2049071825, 4278039587, 3646737721, 2174455751, 3949022098,
        827821145, 2417535037, 3827394381, 2225594644,  696523194,
       3746606069, 4022956085, 2208698901, 4226769793, 3638194495,
       3626659750, 4004596930, 1568505059, 3468813476,   69287485,
        614917845, 2768943812, 3163597493,  987638258, 3292194313,
       3029129842, 1020536433, 1920381898, 3744913157, 3435671526,
       2685917170,  757305455,  166029078, 2565629106,  656398202,
       4260601391,  970928428, 2261312582, 2399587107,  465345360,
       4042572615, 1892430194, 1330548715, 2634848368, 2086774226,
       2416153069, 1467804825,  968231610, 1458136730, 1166947984,
       4114740516, 2851034227, 1054332068,  186835564, 3506105567,
       1449134284,  497739673,  997268239, 1688619011,  425238116,
       1081214529,  121830380, 3200169819, 3384386421,  576365737,
        551459072, 2558135839,  870003847, 2544496986,  402172918,
       2752364072,  558075183, 2255605186, 3585219212,  502878044,
       2059731513, 1487539993, 3194947841, 2857303467,   65225583,
       4118969841, 4015455176, 4207236768, 1241463523, 1416911879,
       2938814948,  788715303, 1658724082, 4016531284,  580924254,
        308558529, 3816831292, 3130619050, 3210275190, 2586099649,
        609264156,  336871655,  782489085, 3464182814,  296340853,
       3632666229, 4244347253, 2975307634, 1828537617, 2989894533,
       2253842152, 1324318794, 3034507938, 3289635744, 2588420774,
       1910795265, 2435558695,  531958214, 1318780036,  198215093,
        105951436, 3351967673, 1473965972, 1764623115, 4091524211,
       3985477054, 1507269289, 1046614215,  105588343, 1995064025,
       4064745961, 3836972886, 1948698602,  842292935, 4157377298,
       2450241134,  541597716,  557059527, 2873877573, 1628055855,
       3406700130,  238993293,  856555824, 2348572505], dtype=np.uint32), 623, 0, 0.0)

np.random.set_state(state)

@profile
def get_mean_for_indicator_poor(df, indicator):
    # poor way to use a groupby here, causes big allocation
    gpby = df.groupby('indicator')
    means = gpby.mean() # means by column
    means_for_ind = means.loc[indicator]
    total = means_for_ind.sum()
    return total

@profile
def get_mean_for_indicator_better(df, indicator, rnd_cols):
    # more memory efficient and faster way to solve this challenge
    df_sub = df.query('indicator==@indicator')[rnd_cols]
    means_for_ind = df_sub.mean() # means by column
    total = means_for_ind.sum() # sum of rows
    return total


@profile
def run():
    arr = np.random.random((SIZE, 10))
    print(f"{arr.shape} shape for our array")
    df = pd.DataFrame(arr)
    rnd_cols = [f"c_{n}" for n in df.columns]
    df.columns = rnd_cols

    # make a big dataframe with an indicator column and lots of random data
    df2 = pd.DataFrame({'indicator' : np.random.randint(0, 10, SIZE)})
    # deliberately overwrite the first df
    df = pd.concat((df2, df), axis=1) # PART OF DEMO - unexpected copy=True forces an expensive copy
    print("Head of our df:")
    print(df.head())
    
    print("Print results to check that we get the result")
    indicator = 2
    print(f"Mean for indicator {indicator} on better implementation {get_mean_for_indicator_better(df, indicator, rnd_cols):0.5f}")
    print(f"Mean for indicator {indicator} on poor implementation: {get_mean_for_indicator_poor(df, indicator):0.5f}")


if __name__ == "__main__":
    run()